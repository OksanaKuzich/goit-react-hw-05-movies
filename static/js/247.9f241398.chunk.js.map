{"version":3,"file":"static/js/247.9f241398.chunk.js","mappings":"mMA8BA,UAzBa,WACX,IAAMA,GAAOC,EAAAA,EAAAA,GAAaC,EAAAA,IAG1B,OACE,8BACGF,GAAwB,IAAhBA,EAAKG,QACZ,SAAC,KAAD,UACGH,EAAKI,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OACR,2BACE,SAAC,KAAD,CACEC,IAAKD,EATJ,kCAS4BA,EAAeE,EAC5CC,IAAKJ,KAEP,uBAAIA,MALGA,EADD,OAWZ,SAAC,KAAD,8BAIP,C,qIC1BYK,EAAMC,EAAAA,QAAAA,IAAH,uDAKHC,EAAWD,EAAAA,QAAAA,GAAH,0IAQRE,EAASF,EAAAA,QAAAA,IAAH,mE,wFCZNV,EAAe,SAACa,GAC3B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRN,EAAKI,GAAIG,KAAKJ,EACf,GAAE,CAACH,EAAMI,IAEHF,CACR,C,mMCVDM,EAAAA,GAAAA,SAAAA,QAAA,gCACA,IACMC,EAAS,CACbC,QAFc,mCAGdC,KAAM,GAGKC,EAAmB,mCAAG,8GAERJ,EAAAA,EAAAA,IAAM,sBAAuB,CAAEC,OAAAA,IAFvB,cAEzBI,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,gCAK/BC,QAAQC,IAAI,KAAMC,SALa,yDAAH,qDASnBC,EAAY,mCAAG,WAAM5B,GAAN,iGAEDiB,EAAAA,EAAAA,IAAM,uBAAD,OAAwBjB,GAAQ,CAAEkB,OAAAA,IAFtC,cAElBI,EAFkB,yBAGjBA,EAASC,KAAKC,SAHG,gCAKxBC,QAAQC,IAAI,KAAMC,SALM,yDAAH,sDASZE,EAAiB,mCAAG,WAAOhB,GAAP,iGAENI,EAAAA,EAAAA,IAAM,UAAD,OAAWJ,GAAM,CAAEK,OAAAA,IAFlB,cAEvBI,EAFuB,yBAGtBA,EAASC,MAHa,gCAK7BE,QAAQC,IAAI,KAAMC,SALW,yDAAH,sDASjB9B,EAAc,mCAAG,WAAOgB,GAAP,iGAEHI,EAAAA,EAAAA,IAAM,UAAD,OAAWJ,EAAX,YAAyB,CAAEK,OAAAA,IAF7B,cAEpBI,EAFoB,yBAGnBA,EAASC,KAAK5B,MAHK,gCAK1B8B,QAAQC,IAAI,KAAMC,SALQ,yDAAH,sDASdG,EAAiB,mCAAG,WAAOjB,GAAP,iGAENI,EAAAA,EAAAA,IAAM,UAAD,OAAWJ,EAAX,YAAyB,CAAEK,OAAAA,IAF1B,cAEvBI,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BC,QAAQC,IAAI,KAAMC,SALW,yDAAH,qD","sources":["components/Cast/Cast.jsx","components/Cast/Cast.styles.jsx","hooks/useFetchById.jsx","service/api.js"],"sourcesContent":["import { useFetchById } from 'hooks/useFetchById';\nimport { fetchMovieCast } from 'service/api';\nimport { Img, CastList, NoInfo } from './Cast.styles';\nimport nophoto from '../../data/nophoto.jpg';\n\nconst Cast = () => {\n  const cast = useFetchById(fetchMovieCast);\n  const URLimg = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <>\n      {cast && cast.length !== 0 ? (\n        <CastList>\n          {cast.map(({ name, profile_path }) => (\n            <li key={name}>\n              <Img\n                src={profile_path ? URLimg + profile_path : nophoto}\n                alt={name}\n              />\n              <p>{name}</p>\n            </li>\n          ))}\n        </CastList>\n      ) : (\n        <NoInfo>~ No results ~</NoInfo>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const Img = styled.img`\nwidth: 100px;\nheight: 150px;\n`;\n\nexport const CastList = styled.ul`\nwidth: 900px;\nmargin: 60px auto;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(8, 1fr);\n`;\n\nexport const NoInfo = styled.div`\n  margin-top: 20px;\n  font-style: italic;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchById = (func) => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    func(id).then(setMovie);\n  }, [func, id]);\n\n  return movie;\n};\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst API_KEY = '0214e4f6556edfc65f2eadfc23b43510';\nconst params = {\n  api_key: API_KEY,\n  page: 1,\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const responce = await axios('/trending/movie/day', { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const searchMovies = async name => {\n  try {\n    const responce = await axios(`/search/movie?query=${name}`, { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}`, { params });\n    return responce.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieCast = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}/credits`, { params });\n    return responce.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieReviews = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}/reviews`, { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["cast","useFetchById","fetchMovieCast","length","map","name","profile_path","src","nophoto","alt","Img","styled","CastList","NoInfo","func","useState","movie","setMovie","id","useParams","useEffect","then","axios","params","api_key","page","fetchTrendingMovies","responce","data","results","console","log","message","searchMovies","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}