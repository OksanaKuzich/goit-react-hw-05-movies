{"version":3,"file":"static/js/353.e53fbbd8.chunk.js","mappings":"sNAGaA,EAAaC,EAAAA,QAAAA,GAAH,wKASVC,EAAaD,EAAAA,QAAAA,GAAH,2HASVE,GAAaF,EAAAA,EAAAA,SAAOG,EAAAA,GAAPH,CAAH,kLAInBC,GASSG,EAAgBJ,EAAAA,QAAAA,IAAH,sFAMbK,EAAML,EAAAA,QAAAA,IAAH,+EAMHM,EAAcN,EAAAA,QAAAA,GAAH,gLAUXO,EAAUP,EAAAA,QAAAA,IAAH,oE,SC7CPQ,EAAe,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAGtC,OACE,8BACGD,GAA8B,IAAnBA,EAAQE,QAClB,SAACP,EAAD,WACE,SAACL,EAAD,UACGU,EAAQG,KAAI,YAA+C,IAA5CC,EAA2C,EAA3CA,GAAIC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACvC,OACE,SAACf,EAAD,WACE,UAACC,EAAD,CAAYe,GAAIP,EAAeG,EAAGK,WAAlC,WACE,UAACZ,EAAD,WACGQ,EADH,KACYC,EAAaI,MAAM,EAAG,GADlC,QAGA,SAACd,EAAD,CAAKe,IAdR,kCAcsBJ,EAAaK,IAAKP,QALxBD,EASpB,SAIL,SAACN,EAAD,0BAIP,C,0HCpCYe,E,QAAUtB,QAAAA,IAAH,4C,SCuBpB,EApBa,WACX,OAA8BuB,EAAAA,EAAAA,UAAS,IAAvC,eAAOd,EAAP,KAAgBe,EAAhB,KASA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,KAGD,UAACV,EAAD,YACE,2CACCb,IACC,SAACD,EAAA,EAAD,CAAcC,QAASA,EAASC,aAZjB,eAgBtB,C,mMCrBDuB,EAAAA,GAAAA,SAAAA,QAAA,gCACA,IACMC,EAAS,CACbC,QAFc,mCAGdC,KAAM,GAGKV,EAAmB,mCAAG,8GAERO,EAAAA,EAAAA,IAAM,sBAAuB,CAAEC,OAAAA,IAFvB,cAEzBG,EAFyB,yBAGxBA,EAASC,KAAKC,SAHU,gCAK/BT,QAAQC,IAAI,KAAMC,SALa,yDAAH,qDASnBQ,EAAY,mCAAG,WAAMC,GAAN,iGAEDR,EAAAA,EAAAA,IAAM,uBAAD,OAAwBQ,GAAQ,CAAEP,OAAAA,IAFtC,cAElBG,EAFkB,yBAGjBA,EAASC,KAAKC,SAHG,gCAKxBT,QAAQC,IAAI,KAAMC,SALM,yDAAH,sDASZU,EAAiB,mCAAG,WAAO7B,GAAP,iGAENoB,EAAAA,EAAAA,IAAM,UAAD,OAAWpB,GAAM,CAAEqB,OAAAA,IAFlB,cAEvBG,EAFuB,yBAGtBA,EAASC,MAHa,gCAK7BR,QAAQC,IAAI,KAAMC,SALW,yDAAH,sDASjBW,EAAc,mCAAG,WAAO9B,GAAP,iGAEHoB,EAAAA,EAAAA,IAAM,UAAD,OAAWpB,EAAX,YAAyB,CAAEqB,OAAAA,IAF7B,cAEpBG,EAFoB,yBAGnBA,EAASC,KAAKM,MAHK,gCAK1Bd,QAAQC,IAAI,KAAMC,SALQ,yDAAH,sDASda,EAAiB,mCAAG,WAAOhC,GAAP,iGAENoB,EAAAA,EAAAA,IAAM,UAAD,OAAWpB,EAAX,YAAyB,CAAEqB,OAAAA,IAF1B,cAEvBG,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,gCAK7BT,QAAQC,IAAI,KAAMC,SALW,yDAAH,qD","sources":["components/TrendingList/TrendingList.styles.jsx","components/TrendingList/TrendingList.jsx","pages/Home/Home.styles.jsx","pages/Home/Home.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesList = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 14px;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(5, 1fr);\n`;\n\nexport const MoviesItem = styled.li`\n  width: 150px;\n  transition: 1s;\n  display: flex;\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MoviesLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  ${MoviesItem}:hover & {\n    color: rgb(255, 127, 80);\n  }\n\n  &.active {\n    color: coral;\n  }\n`;\n\nexport const MoviesWrapper = styled.div`\n  width: 850px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Img = styled.img`\n  width: 150px;\n  height: 225px;\n  margin-top: 5px;\n`;\n\nexport const TitleMovies = styled.h3`\n  flex-grow: 1;\n  font-weight: 400;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  background-color: inherit;\n`;\n\nexport const Loading = styled.div`\n  font-style: italic;\n  margin-top: 10px;\n`","import PropTypes from 'prop-types';\nimport {\n  MoviesList,\n  MoviesItem,\n  MoviesLink,\n  MoviesWrapper,\n  Img,\n  TitleMovies,\n  Loading,\n} from './TrendingList.styles';\n\nexport const TrendingList = ({ gallery, pathLocation }) => {\n  const URLimg = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <>\n      {gallery && gallery.length !== 0 ? (\n        <MoviesWrapper>\n          <MoviesList>\n            {gallery.map(({ id, title, release_date, poster_path }) => {\n              return (\n                <MoviesItem key={id}>\n                  <MoviesLink to={pathLocation + id.toString()}>\n                    <TitleMovies>\n                      {title} ({release_date.slice(0, 4)})\n                    </TitleMovies>\n                    <Img src={URLimg + poster_path} alt={title} />\n                  </MoviesLink>\n                </MoviesItem>\n              );\n            })}\n          </MoviesList>\n        </MoviesWrapper>\n      ) : (\n        <Loading>Loading...</Loading>\n      )}\n    </>\n  );\n};\n\nTrendingList.propTypes = {\n  gallery: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  pathLocation: PropTypes.string.isRequired,\n};\n\n","import styled from 'styled-components';\n\nexport const Section = styled.div`\n  font-size: 18px;\n`;","import { fetchTrendingMovies } from 'service/api';\nimport { useState, useEffect } from 'react';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\nimport { Section } from './Home.styles';\n\nconst Home = () => {\n  const [gallery, setGallery] = useState([]);\n  const pathLocation = '/movies/';\n\n  useEffect(() => {\n    fetchTrendingMovies()\n      .then(setGallery)\n      .catch(error => console.log(error.message));\n  }, []);\n\n  return (\n    <Section>\n      <h1>Trending Today</h1>\n      {gallery && (\n        <TrendingList gallery={gallery} pathLocation={pathLocation} />\n      )}\n    </Section>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst API_KEY = '0214e4f6556edfc65f2eadfc23b43510';\nconst params = {\n  api_key: API_KEY,\n  page: 1,\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const responce = await axios('/trending/movie/day', { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const searchMovies = async name => {\n  try {\n    const responce = await axios(`/search/movie?query=${name}`, { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}`, { params });\n    return responce.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieCast = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}/credits`, { params });\n    return responce.data.cast;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchMovieReviews = async (id) => {\n  try {\n    const responce = await axios(`/movie/${id}/reviews`, { params });\n    return responce.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"],"names":["MoviesList","styled","MoviesItem","MoviesLink","NavLink","MoviesWrapper","Img","TitleMovies","Loading","TrendingList","gallery","pathLocation","length","map","id","title","release_date","poster_path","to","toString","slice","src","alt","Section","useState","setGallery","useEffect","fetchTrendingMovies","then","catch","error","console","log","message","axios","params","api_key","page","responce","data","results","searchMovies","name","fetchMovieDetails","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}